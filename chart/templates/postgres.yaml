apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-secret
  labels:
    app: postgres
data:
  POSTGRES_USER: "{{ .Values.postgres.user }}"
  POSTGRES_PASSWORD: "{{ .Values.postgres.password }}"
  POSTGRES_URL: "postgresql://{{ .Values.postgres.user }}:{{ .Values.postgres.password }}@{{ .Values.postgres.host }}/{{ .Values.postgres.database }}?sslmode=disable"

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-sql-schema
data:
  schema.sql: {{ .Files.Get "files/schema.sql" | indent 4 }}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-db
  template:
    metadata:
      labels:
        app: postgres-db
    spec:
      containers:
        - name: postgres-db
          image: postgres
          imagePullPolicy: Always
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-secret
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d/
              name: schema-volume
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
      volumes:
        - name: schema-volume
          configMap:
            name: postgres-sql-schema

---

apiVersion: v1
kind: Service
metadata:
  name: postgres-db
  labels:
    app: postgres-db
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: postgres-db